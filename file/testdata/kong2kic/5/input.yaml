services:
  - name: example-service
    url: http://example-api.com
    protocol: http
    host: example-api.com
    port: 80
    path: /v1
    retries: 5
    connect_timeout: 5000
    write_timeout: 60000
    read_timeout: 60000
    enabled: true
    client_certificate: 4e3ad2e4-0bc4-4638-8e34-c84a417ba39b
    tags:
      - example
      - api
    routes:
      - name: example-route
        methods:
          - GET
          - POST
        hosts:
          - example.com
        paths:
          - /v1/example
        protocols:
          - http
          - https
        headers:
          x-my-header:
            - foo
            - bar
          x-another-header:
            - bla
        regex_priority: 1
        strip_path: false
        preserve_host: true
        tags:
          - version:v1
        https_redirect_status_code: 302
        snis:
          - example.com
        sources:
          - ip: 192.168.0.1
        plugins:
          - name: acl
            config:
              whitelist: admin
          - name: aws-lambda
            config:
              aws_key: my_key
              aws_secret: my_secret
              function_name: my_function
              region: us-west-2
          - name: basic-auth
            config:
              hide_credentials: false
          - name: cors
            config:
              origins:
                - example.com
              methods:
                - GET
                - POST
              headers:
                - Authorization
              exposed_headers:
                - X-My-Header
              max_age: 3600
              credentials: true
          - name: file-log
            config:
              path: /var/log/kong/kong.log
              reopen: true
          - name: http-log
            config:
              http_endpoint: http://example.com/logs
              method: POST
              content_type: application/json
              timeout: 10000
              keepalive: 60000
              retry_count: 10
              queue_size: 1000
          - name: ip-restriction
            config:
              whitelist:
                - 192.168.0.1/24
              blacklist:
                - 192.168.0.2/32
          - name: jwt
            config:
              uri_param_names:
                - token
              claims_to_verify:
                - exp
                - nbf
              key_claim_name: kid
              secret_is_base64: false
              anonymous: null
              run_on_preflight: true
              maximum_expiration: 3600
              header_names:
                - Authorization
          - name: key-auth
            config:
              hide_credentials: false
              key_names:
                - apikey
              key_in_body: false
              run_on_preflight: true
          - name: oauth2
            config:
              scopes:
                - email
                - phone
              mandatory_scope: false
              provision_key: my_provision_key
              token_expiration: 3600
              enable_authorization_code: true
              enable_implicit_grant: true
              enable_client_credentials: true
              enable_password_grant: true
              enable_refresh_token: true
              refresh_token_ttl: 1209600
              anonymous: null
              hide_credentials: false
              accept_http_if_already_terminated: false
              provision_key_derived_secret: false
          - name: rate-limiting
            config:
              second: 10
              minute: 100
              hour: 1000
              day: 10000
              month: 100000
              policy: local
              redis_host: localhost
              redis_port: 6379
              redis_password: null
              redis_timeout: 2000
              redis_database: 0
              fault_tolerant: true
              limit_by: consumer
              header_name: X-RateLimit-Limit
              header_limit: 100
              header_remaining: 50
              header_reset: 1553100000
              key_prefix: my_prefix
          - name: request-termination
            config:
              status_code: 403
              message: Forbidden
              body: null
              content_type: text/plain
          - name: response-ratelimiting
            config:
              limits:
                - second: 10
                  limit: 100
                - minute: 1000
                  limit: 10000
              policy: local
              redis_host: localhost
              redis_port: 6379
              redis_password: null
              redis_timeout: 2000
              redis_database: 0
              fault_tolerant: true
              header_name: X-RateLimit-Limit
              header_limit: 100
              header_remaining: 50
              header_reset: 1553100000
              key_prefix: my_prefix
          - name: tcp-log
            config:
              host: example.com
              port: 1234
              timeout: 10000
              tls: false
              tls_sni: null
              tls_verify: false
              tls_cert: null
              tls_key: null
              tls_protocols:
                - TLSv1.1
                - TLSv1.2
              tls_ciphers:
                - ECDHE-RSA-AES128-GCM-SHA256
                - ECDHE-ECDSA-AES128-GCM-SHA256
upstreams:
  - name: example-api.com
    algorithm: round-robin
    hash_on: none
    hash_fallback: none
    hash_on_cookie_path: "/"
    slots: 10000
    healthchecks:
      passive:
        type: http
        healthy:
          http_statuses:
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 207
          - 208
          - 226
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 308
          successes: 0
        unhealthy:
          http_statuses:
          - 429
          - 500
          - 503
          timeouts: 0
          http_failures: 0
          tcp_failures: 0
      active:
        https_verify_certificate: true
        healthy:
          http_statuses:
          - 200
          - 302
          successes: 0
          interval: 0
        unhealthy:
          http_failures: 0
          http_statuses:
          - 429
          - 404
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
          timeouts: 0
          tcp_failures: 0
          interval: 0
        type: http
        concurrency: 10
        headers:
          x-my-header:
            - foo
            - bar
          x-another-header:
            - bla
        timeout: 1
        http_path: "/"
        https_sni: example.com
      threshold: 0
    tags:
    - user-level
    - low-priority
    host_header: example.com
    client_certificate:
      id: ea29aaa3-3b2d-488c-b90c-56df8e0dd8c6
    use_srv_name: false
consumers:
  - username: example-user
    custom_id: "1234567890"
    tags:
      - internal
    keyauth_credentials:
      - key: my_api_key
        tags:
          - internal
    jwt_secrets:
      - key: my_jwt_secret
        algorithm: HS256
        secret: my_secret_key
        tags:
          - internal
    oauth2_credentials:
      - name: my_oauth2_app
        client_id: oauth2_client_id
        client_secret: oauth2_client_secret
        redirect_uris:
          - https://example-app.com/callback
        tags:
          - internal
    hmacauth_credentials:
      - username: my_hmac_user
        secret: my_hmac_secret
        tags:
          - internal
    basicauth_credentials:
      - username: my_basic_user
        password: my_basic_password
        tags:
          - internal
    mtls_auth_credentials:
      - id: bda09448-3b10-4da7-a83b-2a8ba6021f0c
        subject_name: example-user@example.com
    acls:
      - group: acl_group
        tags:
          - internal